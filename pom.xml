<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
           http://maven.apache.org/POM/4.0.0
           https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.pelajaran.pqcrypto</groupId>
  <artifactId>laicrypto</artifactId>
  <version>0.1.0</version>
  <packaging>jar</packaging>
  <name>LAICrypto</name>
  <description>LAI is a promising post-quantum cryptosystem based on isogenies of elliptic curves over lemniscate lattices, offering resistance against quantum-capable adversaries.</description>
  <url>https://github.com/4211421036/pqcrypto</url>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://opensource.org/licenses/MIT</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <!-- Versi Java compiler -->
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <!-- Versi Jackson untuk JSON parsing -->
    <jackson.version>2.15.2</jackson.version>
  </properties>

  <dependencies>
    <!-- Jackson Databind untuk JsonNode di decryptAll(...) -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
  </dependencies>

  <!-- Konfigurasi agar 'mvn deploy' meng-upload ke GitHub Packages Maven Registry -->
  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub Packages</name>
      <!-- Sesuaikan dengan <OWNER>/<REPO> Anda -->
      <url>https://maven.pkg.github.com/4211421036/pqcrypto</url>
    </repository>
  </distributionManagement>

  <build>
    <plugins>
      <!-- Plugin untuk compile Java -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
