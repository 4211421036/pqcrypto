name: Build & Publish Maven Artifacts

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
    paths:
      - 'pom.xml'
      - 'src/**'
      - '.github/workflows/npm.yml'
  
jobs:
  publish-github-packages:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      # 1) Checkout codes
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2) Setup Java 11 + cache Maven
      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      # 3) Build & Test
      - name: Build & Test
        run: mvn --batch-mode clean verify

      # 4) Buat settings.xml untuk GitHub Packages
      - name: Configure Maven settings for GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                        https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <!-- ini harus sesuai dengan <id>github</id> di pom.xml -->
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
          </settings>
          EOF

  publish-maven-central:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: publish-github-packages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'

      - name: Import GPG key & set trust
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          # 1) Buat folder .gnupg jika belum ada
          mkdir -p ~/.gnupg
      
          # 2) Impor private key dari secret
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
      
          # 3) Pastikan key telah ter‐import dan ambil Key ID-nya
          KEY_ID=$(gpg --list-secret-keys --with-colons | grep '^sec' | head -n1 | cut -d':' -f5)
          if [ -z "$KEY_ID" ]; then
            echo "ERROR: GPG private key not found after import"
            exit 1
          fi
      
          # 4) Set trust level ke “ultimate” agar tidak ada prompt
          echo -e "5\ny\n" | gpg --command-fd 0 --edit-key "$KEY_ID" trust
      
          # 5) (Optional) Cek daftar secret key untuk debugging
          gpg --list-secret-keys


      - name: Build & Prepare for OSSRH Deploy
        run: mvn --batch-mode clean verify

      - name: Configure Maven settings for Sonatype OSSRH
        # Anda perlu menambahkan OSSRH_USERNAME & OSSRH_PASSWORD di GitHub Secrets
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                        https://maven.apache.org/xsd/settings-1.0.0.xsd">
            <servers>
              <server>
                <!-- ini harus sesuai dengan <id>ossrh</id> di pom.xml -->
                <id>ossrh</id>
                <username>${{ secrets.OSSRH_USERNAME }}</username>
                <password>${{ secrets.OSSRH_PASSWORD }}</password>
              </server>
              <server>
                <!-- untuk passphrase GPG, jika Anda menggunakan plugin signing di POM -->
                <id>gpg.passphrase</id>
                <username>unused</username>
                <password>${{ secrets.GPG_PASSPHRASE }}</password>
              </server>
            </servers>
          </settings>
          EOF

      - name: Deploy to Maven Central (OSS Sonatype)
        # mvn deploy dengan profile yang di‐setup di pom.xml untuk OSSRH
        run: mvn --batch-mode clean deploy -P release --settings ~/.m2/settings.xml
